name: build-silverblue-base
on:
  # schedule:
  #   - cron: "0 20 * * *" # 8pm everyday
  push:
    branches:
      - main
env:
  IMAGE_NAME: silverblue-base
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  build-and-push:
    name: Build & push
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        major_version: [37]
        include:
          - major_version: 37
            is_latest: true
            is_stable: true
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Generate tags
        id: generate_tags
        shell: bash
        run: |
          echo "date=$(date +%Y%m%d)" >> $GITHUB_OUTPUT
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

          alias_tags=()
          
          if [[ "${{ matrix.is_latest }}" == "true" ]]; then
            alias_tags+=("latest")
          fi

          if [[ "${{ matrix.is_stable }}" == "true" ]]; then
            alias_tags+=("stable")
          fi
          
          echo "alias_tags=${alias_tags[*]}" >> $GITHUB_OUTPUT

      - name: Build image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: |
            ./Containerfile
          image: ${{ env.IMAGE_NAME }}
          tags: |
            ${{ steps.generate_tags.outputs.alias_tags }}
            ${{ steps.generate_tags.outputs.date }}
            ${{ steps.generate_tags.outputs.sha_short }}
            ${{ matrix.major_version }}
          build-args: |
            FEDORA_MAJOR_VERSION=${{ matrix.major_version }}
          oci: true

      # Workaround bug where capital letters in your GitHub username make it impossible to push to GHCR.
      # https://github.com/macbre/push-to-ghcr/issues/12
      - name: Lowercase Registry
        id: registry_case
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ env.IMAGE_REGISTRY }}

      - name: Push image
        uses: redhat-actions/push-to-registry@v2
        id: push_image
        env:
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ github.token }}
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ${{ steps.registry_case.outputs.lowercase }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
          extra-args: |
            --disable-content-trust
      - name: Echo outputs
        run: |
          echo "${{ toJSON(steps.push_image.outputs) }}"
